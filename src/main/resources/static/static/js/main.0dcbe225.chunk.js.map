{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTTOKEN.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","sotre.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTaskItem.js","actions/projectTaskActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/register.js","components/UserManagement/login.js","securityUtils/secureRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","createProject","project","history","dispatch","a","axios","post","push","type","test","response","data","ProjectItem","onDeteleClick","id","props","deletePorject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","delete","payload","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","window","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","error","onChange","onSubmit","e","setState","target","name","value","preventDefault","newProject","console","log","classnames","placeholder","nextProps","prevState","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTaskItem","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","onDeleteClick","confirm","Backlog","tasks","projectTask","todoItem","inprogressItem","doneItem","i","length","status","ProjectBoard","getProjectTask","content","projectNotFound","role","boardContentAgrithom","AddProjectTask","dueDate","newProjectTask","createProjectTask","UpdateProjectTask","create_At","getProjectById","updateProjectTask","blogId","SequenceId","patch","Landing","class","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0dcbe225.chunk.js","sourcesContent":["export const GET_ERRORS = 'GET_ERRORS';\r\nexport const GET_PROJECTS = 'GET_PROJECTS';\r\nexport const GET_PROJECT = 'GET_PROJECT';\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT ';\r\n\r\n//actions for backlog\r\nexport const GET_BACKLOG = 'GET_BACKLOG';\r\nexport const GET_PROJECT_TASK = 'GET_PROJECT_TASK';\r\nexport const DELETE_PROJECT_TASK = 'DELETE_PROJECT_TASK';\r\n\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\n","import axios from 'axios';\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from './types';\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post('/api/project', project);\r\n    history.push('/dashboard');\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      test: {},\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      test: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = (history) => async (dispatch) => {\r\n  const res = await axios.get('/api/project/all');\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push('/dashboard');\r\n  }\r\n};\r\n\r\nexport const deletePorject = (id, history) => async (dispatch) => {\r\n  await axios.delete(`/api/project/${id}`);\r\n\r\n  dispatch({\r\n    type: DELETE_PROJECT,\r\n    payload: id,\r\n  });\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deletePorject } from '../../actions/projectActions';\r\n\r\nclass ProjectItem extends Component {\r\n  onDeteleClick = (id) => {\r\n    this.props.deletePorject(id, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className='container'>\r\n        <div className='card card-body bg-light mb-3'>\r\n          <div className='row'>\r\n            <div className='col-2'>\r\n              <span className='mx-auto'>{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className='col-lg-6 col-md-4 col-8'>\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className='col-md-4 d-none d-lg-block'>\r\n              <ul className='list-group'>\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className='list-group-item board'>\r\n                    <i className='fa fa-flag-checkered pr-1'>Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className='list-group-item update'>\r\n                    <i className='fa fa-edit pr-1'>Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className='list-group-item delete'\r\n                  onClick={this.onDeteleClick.bind(\r\n                    this,\r\n                    project.projectIdentifier,\r\n                    this.props.history\r\n                  )}\r\n                >\r\n                  <i className='fa fa-minus-circle pr-1'>Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjectItem.propTypes = {\r\n  deletePorject: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { deletePorject })(ProjectItem);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to='/addProject' className='btn btn-lg btn-info'>\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default CreateProjectButton;\r\n","import React, { Component } from 'react';\r\nimport ProjectItem from './Project/ProjectItem';\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport { connect } from 'react-redux';\r\nimport { getProjects } from '../actions/projectActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className='projects'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-md-12'>\r\n              <h1 className='display-4 text-center'>Projects</h1>\r\n              <br />\r\n              <CreateProjectButton></CreateProjectButton>\r\n              <br />\r\n              <hr />\r\n              {projects.map((project) => (\r\n                <ProjectItem key={project.id} project={project}></ProjectItem>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from 'axios';\r\n\r\nconst setJWTToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from 'axios';\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\nimport jwt_decode from 'jwt-decode';\r\nimport setJWTToken from '../securityUtils/setJWTTOKEN';\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post('/api/users/register', newUser);\r\n    history.push('/login');\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      test: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      test: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post('/api/users/login', LoginRequest);\r\n    const { token } = res.data;\r\n    localStorage.setItem('jwtToken', token);\r\n    setJWTToken(token);\r\n    const decoded = jwt_decode(token);\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      test: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('jwtToken');\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/securityActions';\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = '/';\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n    const userIsAuthenticated = (\r\n      <div className='collapse navbar-collapse' id='mobile-nav'>\r\n        <ul className='navbar-nav mr-auto'>\r\n          <li className='nav-item'>\r\n            <Link className='nav-link' to='/dashboard'>\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className='navbar-nav ml-auto'>\r\n          <li className='nav-item'>\r\n            <Link className='nav-link' to='/dashboard'>\r\n              <i className='fas fa-user-circle mr-1' />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link\r\n              className='nav-link'\r\n              to='/logout'\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className='collapse navbar-collapse' id='mobile-nav'>\r\n        <ul className='navbar-nav ml-auto'>\r\n          <li className='nav-item'>\r\n            <Link className='nav-link' to='/register'>\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link className='nav-link' to='/login'>\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n    return (\r\n      <nav className='navbar navbar-expand-sm navbar-dark bg-primary mb-4'>\r\n        <div className='container'>\r\n          <Link className='navbar-brand' to='/'>\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className='navbar-toggler'\r\n            type='button'\r\n            data-toggle='collapse'\r\n            data-target='#mobile-nav'\r\n          >\r\n            <span className='navbar-toggler-icon' />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../actions/projectActions';\r\nimport classnames from 'classnames';\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: '',\r\n      projectIdentifier: '',\r\n      description: '',\r\n      start_date: '',\r\n      end_date: '',\r\n      error: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    //该方法内禁止访问this\r\n    if (nextProps.error !== prevState.error) {\r\n      //通过对比nextProps和prevState，返回一个用于更新状态的对象\r\n\r\n      return {\r\n        error: nextProps.error,\r\n      };\r\n    }\r\n    //不需要更新状态，返回null\r\n\r\n    return null;\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    console.log(error);\r\n    return (\r\n      <div>\r\n        <div className='project'>\r\n          <div className='container'>\r\n            <div className='row'>\r\n              <div className='col-md-8 m-auto'>\r\n                <h5 className='display-4 text-center'>Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className='form-group'>\r\n                    <input\r\n                      type='text'\r\n                      className={classnames('form-control form-control-lg ', {\r\n                        'is-invalid': error.projectName,\r\n                      })}\r\n                      placeholder='Project Name'\r\n                      name='projectName'\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {error.projectName && (\r\n                      <div className='invalid-feedback'>\r\n                        {error.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <input\r\n                      type='text'\r\n                      className={classnames('form-control form-control-lg ', {\r\n                        'is-invalid': error.projectIdentifier,\r\n                      })}\r\n                      placeholder='Unique Project ID'\r\n                      name='projectIdentifier'\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {error.projectIdentifier && (\r\n                      <div className='invalid-feedback'>\r\n                        {error.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <textarea\r\n                      className={classnames('form-control form-control-lg ', {\r\n                        'is-invalid': error.description,\r\n                      })}\r\n                      placeholder='Project Description'\r\n                      name='description'\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {error.description && (\r\n                      <div className='invalid-feedback'>\r\n                        {error.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className='form-group'>\r\n                    <input\r\n                      type='date'\r\n                      className='form-control form-control-lg'\r\n                      name='start_date'\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className='form-group'>\r\n                    <input\r\n                      type='date'\r\n                      className='form-control form-control-lg'\r\n                      name='end_date'\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type='submit'\r\n                    className='btn btn-primary btn-block mt-4'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  error: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.test;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from '../actions/types';\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        //project: action.payload,\r\n        projects: state.projects.filter(\r\n          (project) => project.projectIdentifier !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n  DELETE_PROJECT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (project_task) => project_task.projectSequence !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from '../actions/types';\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {},\r\n};\r\n\r\nconst booleanActionPayload = (payload) => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport projectReducer from './projectReducer';\r\nimport backlogReducer from './backlogReducer';\r\nimport securityReducer from './securityReducer';\r\n\r\nexport default combineReducers({\r\n  error: errorReducer,\r\n  project: projectReducer,\r\n  project_task: backlogReducer,\r\n  security: securityReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\n// if (window.navigator.userAgent.includes('Chorme')) {\r\n//   store = createStore(\r\n//     rootReducer,\r\n//     initialState,\r\n//     compose(\r\n//       applyMiddleware(...middleware),\r\n//       window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n//         window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//     )\r\n//   );\r\n// } else {\r\n//   store = createStore(\r\n//     rootReducer,\r\n//     initialState,\r\n//     compose(applyMiddleware(...middleware))\r\n//   );\r\n// }\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes('Chrome') && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport { getProject, createProject } from '../../actions/projectActions';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: '',\r\n      projectName: '',\r\n      projectIdentifier: '',\r\n      description: '',\r\n      start_date: '',\r\n      end_date: '',\r\n      error: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.error) {\r\n      this.setState({ error: nextProps.error });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    } = nextProps.project;\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    console.log(error);\r\n    return (\r\n      <div>\r\n        <div className='project'>\r\n          <div className='container'>\r\n            <div className='row'>\r\n              <div className='col-md-8 m-auto'>\r\n                <h5 className='display-4 text-center'>Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className='form-group'>\r\n                    <input\r\n                      type='text'\r\n                      className={classnames('form-control form-control-lg ', {\r\n                        'is-invalid': error.projectName,\r\n                      })}\r\n                      placeholder='Project Name'\r\n                      name='projectName'\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {error.projectName && (\r\n                      <div className='invalid-feedback'>\r\n                        {error.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <input\r\n                      type='text'\r\n                      className={classnames('form-control form-control-lg ', {\r\n                        'is-invalid': error.projectIdentifier,\r\n                      })}\r\n                      placeholder='Unique Project ID'\r\n                      name='projectIdentifier'\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                      disabled\r\n                    />\r\n                    {error.projectIdentifier && (\r\n                      <div className='invalid-feedback'>\r\n                        {error.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <textarea\r\n                      className={classnames('form-control form-control-lg ', {\r\n                        'is-invalid': error.description,\r\n                      })}\r\n                      placeholder='Project Description'\r\n                      name='description'\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {error.description && (\r\n                      <div className='invalid-feedback'>\r\n                        {error.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className='form-group'>\r\n                    <input\r\n                      type='date'\r\n                      className='form-control form-control-lg'\r\n                      name='start_date'\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className='form-group'>\r\n                    <input\r\n                      type='date'\r\n                      className='form-control form-control-lg'\r\n                      name='end_date'\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type='submit'\r\n                    className='btn btn-primary btn-block mt-4'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  error: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { deleteProjectTask } from '../../../actions/projectTaskActions';\r\n\r\nclass ProjectTaskItem extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n    if (project_task.priority === 1) {\r\n      priorityClass = 'bg-danger text-light';\r\n      priorityString = 'HIGH';\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = 'bg-warning text-light';\r\n      priorityString = 'MEDIUM';\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = 'bg-info text-light';\r\n      priorityString = 'LOW';\r\n    }\r\n    return (\r\n      <div className='card mb-1 bg-light'>\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority:{priorityString}\r\n        </div>\r\n        <div className='card-body bg-light'>\r\n          <h5 className='card-title'>{project_task.summary}</h5>\r\n          <p className='card-text text-truncate '>\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className='btn btn-primary'\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n            className='btn btn-danger ml-4'\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, { deleteProjectTask })(ProjectTaskItem);\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n  DELETE_PROJECT,\r\n  GET_ERRORS,\r\n} from '../actions/types';\r\nimport axios from 'axios';\r\n\r\nexport const createProjectTask = (projectTask, history, id) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const res = await axios.post(`/api/backlog/${id}`, projectTask);\r\n    console.log('trying to transfer');\r\n    history.push(`/projectBoard/${id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      test: {},\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      test: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${id}`);\r\n    console.log(res.data);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      test: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectById = (blogId, SequenceId, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${blogId}/${SequenceId}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      test: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async (dispatch) => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      test: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      test: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport ProjectTaskItem from './ProjectTasks/ProjectTaskItem';\r\nimport { connect } from 'react-redux';\r\nimport { getProjectTask } from '../../actions/projectTaskActions';\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_task } = this.props;\r\n    const tasks = project_task.map((projectTask) => (\r\n      <ProjectTaskItem\r\n        key={projectTask.id}\r\n        project_task={projectTask}\r\n      ></ProjectTaskItem>\r\n    ));\r\n    let todoItem = [];\r\n    let inprogressItem = [];\r\n    let doneItem = [];\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === 'TO_DO') {\r\n        todoItem.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === 'IN_PROGRESS') {\r\n        inprogressItem.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === 'DONE') {\r\n        doneItem.push(tasks[i]);\r\n      }\r\n    }\r\n    return (\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-md-4'>\r\n            <div className='card text-center mb-2'>\r\n              <div className='card-header bg-secondary text-white'>\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItem}\r\n          </div>\r\n          <div className='col-md-4'>\r\n            <div className='card text-center mb-2'>\r\n              <div className='card-header bg-primary text-white'>\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inprogressItem}\r\n          </div>\r\n          <div className='col-md-4'>\r\n            <div className='card text-center mb-2'>\r\n              <div className='card-header bg-success text-white'>\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItem}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Backlog from './Backlog';\r\nimport { connect } from 'react-redux';\r\nimport { getProjectTask } from '../../actions/projectTaskActions';\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      error: {},\r\n    };\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    //该方法内禁止访问this\r\n    if (nextProps.error !== prevState.error) {\r\n      //通过对比nextProps和prevState，返回一个用于更新状态的对象\r\n\r\n      return {\r\n        error: nextProps.error,\r\n      };\r\n    }\r\n    //不需要更新状态，返回null\r\n\r\n    return null;\r\n  }\r\n  componentDidMount() {\r\n    this.props.getProjectTask(this.props.match.params.id);\r\n  }\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.project_task;\r\n    const { error } = this.state;\r\n    let content;\r\n\r\n    const boardContentAgrithom = (error, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (error.projectNotFound) {\r\n          return (\r\n            <div className='alert alert-danger text-center' role='alert'>\r\n              {error.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (error.projectIdentifier) {\r\n          return (\r\n            <div className='alert alert-danger text-center' role='alert'>\r\n              {error.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className='alert alert-info text-center' role='alert'>\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog id={id} project_task={project_tasks}></Backlog>;\r\n      }\r\n    };\r\n    content = boardContentAgrithom(error, project_tasks);\r\n    return (\r\n      <div className='container'>\r\n        <Link to={`/addProjectTask/${id}`} className='btn btn-primary mb-3'>\r\n          <i className='fas fa-plus-circle'> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapped = (state) => ({\r\n  project_task: state.project_task,\r\n  error: state.error,\r\n});\r\n\r\nexport default connect(mapped, { getProjectTask })(ProjectBoard);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createProjectTask } from '../../../actions/projectTaskActions';\r\nimport classnames from 'classnames';\r\nclass AddProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      summary: '',\r\n      acceptanceCriteria: '',\r\n      status: '',\r\n      priority: '',\r\n      dueDate: '',\r\n      error: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    //该方法内禁止访问this\r\n    if (nextProps.error !== prevState.error) {\r\n      //通过对比nextProps和prevState，返回一个用于更新状态的对象\r\n\r\n      return {\r\n        error: nextProps.error,\r\n      };\r\n    }\r\n    //不需要更新状态，返回null\r\n\r\n    return null;\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProjectTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n\r\n    this.props.createProjectTask(\r\n      newProjectTask,\r\n      this.props.history,\r\n      this.props.match.params.id\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    const { id } = this.props.match.params.id;\r\n    return (\r\n      <div className='add-PBI'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-md-8 m-auto'>\r\n              <Link to={`/projectBoard/${id}`} className='btn btn-light'>\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className='display-4 text-center'>Add Project Task</h4>\r\n              <p className='lead text-center'>Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className={classnames('form-control form-control-lg ', {\r\n                      'is-invalid': error.summary,\r\n                    })}\r\n                    name='summary'\r\n                    placeholder='Project Task summary'\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {error.summary && (\r\n                    <div className='invalid-feedback'>{error.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className='form-group'>\r\n                  <textarea\r\n                    className='form-control form-control-lg'\r\n                    placeholder='Acceptance Criteria'\r\n                    name='acceptanceCriteria'\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='date'\r\n                    className='form-control form-control-lg'\r\n                    name='dueDate'\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className='form-group'>\r\n                  <select\r\n                    className='form-control form-control-lg'\r\n                    name='priority'\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className='form-group'>\r\n                  <select\r\n                    className='form-control form-control-lg'\r\n                    name='status'\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=''>Select Status</option>\r\n                    <option value='TO_DO'>TO DO</option>\r\n                    <option value='IN_PROGRESS'>IN PROGRESS</option>\r\n                    <option value='DONE'>DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type='submit'\r\n                  className='btn btn-primary btn-block mt-4'\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProjectTask })(AddProjectTask);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getProjectById,\r\n  updateProjectTask,\r\n} from '../../../actions/projectTaskActions';\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: '',\r\n      projectSequence: '',\r\n      summary: '',\r\n      acceptanceCriteria: '',\r\n      status: '',\r\n      priority: '',\r\n      dueDate: '',\r\n      projectIdentifier: '',\r\n      create_At: '',\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectById(backlog_id, pt_id, this.props.history);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At,\r\n    };\r\n\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='add-PBI'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-md-8 m-auto'>\r\n              <a href='#' className='btn btn-light'>\r\n                Back to Project Board\r\n              </a>\r\n              <h4 className='display-4 text-center'>Update Project Task</h4>\r\n              <p className='lead text-center'>\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{' '}\r\n                {this.state.projectSequence}{' '}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control form-control-lg'\r\n                    name='summary'\r\n                    placeholder='Project Task summary'\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className='form-group'>\r\n                  <textarea\r\n                    className='form-control form-control-lg'\r\n                    placeholder='Acceptance Criteria'\r\n                    name='acceptanceCriteria'\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='date'\r\n                    className='form-control form-control-lg'\r\n                    name='dueDate'\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className='form-group'>\r\n                  <select\r\n                    className='form-control form-control-lg'\r\n                    name='priority'\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className='form-group'>\r\n                  <select\r\n                    className='form-control form-control-lg'\r\n                    name='status'\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=''>Select Status</option>\r\n                    <option value='TO_DO'>TO DO</option>\r\n                    <option value='IN_PROGRESS'>IN PROGRESS</option>\r\n                    <option value='DONE'>DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type='submit'\r\n                  className='btn btn-primary btn-block mt-4'\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  project_task: state.project_task.project_task,\r\n  error: state.error,\r\n});\r\nexport default connect(mapStateToProps, { getProjectById, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div class='landing'>\r\n        <div class='light-overlay landing-inner text-dark'>\r\n          <div class='container'>\r\n            <div class='row'>\r\n              <div class='col-md-12 text-center'>\r\n                <h1 class='display-3 mb-4'>Personal Kanban Tool</h1>\r\n                <p class='lead'>\r\n                  Create your account to join active projects or start you own\r\n                </p>\r\n                <hr />\r\n                <Link to='/register' class='btn btn-lg btn-primary mr-2'>\r\n                  Sign Up\r\n                </Link>\r\n                <Link to='/login' class='btn btn-lg btn-secondary mr-2'>\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from 'react';\r\nimport { createNewUser } from '../../actions/securityActions';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: '',\r\n      fullName: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      error: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    //该方法内禁止访问this\r\n    if (nextProps.error !== prevState.error) {\r\n      //通过对比nextProps和prevState，返回一个用于更新状态的对象\r\n\r\n      return {\r\n        error: nextProps.error,\r\n      };\r\n    }\r\n    //不需要更新状态，返回null\r\n\r\n    return null;\r\n  }\r\n  render() {\r\n    const { error } = this.state;\r\n    return (\r\n      <div className='register'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-md-8 m-auto'>\r\n              <h1 className='display-4 text-center'>Sign Up</h1>\r\n              <p className='lead text-center'>Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': error.fullName,\r\n                    })}\r\n                    placeholder='Full Name'\r\n                    name='fullName'\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {error.fullName && (\r\n                    <div className='invalid-feedback'>{error.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='email'\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': error.username,\r\n                    })}\r\n                    placeholder='Email Address (Username)'\r\n                    name='username'\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {error.username && (\r\n                    <div className='invalid-feedback'>{error.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='password'\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': error.password,\r\n                    })}\r\n                    placeholder='Password'\r\n                    name='password'\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {error.password && (\r\n                    <div className='invalid-feedback'>{error.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='password'\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': error.confirmPassword,\r\n                    })}\r\n                    placeholder='Confirm Password'\r\n                    name='confirmPassword'\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {error.confirmPassword && (\r\n                    <div className='invalid-feedback'>\r\n                      {error.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type='submit' className='btn btn-info btn-block mt-4' />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.error,\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { login } from '../../actions/securityActions';\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      error: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n\r\n    if (nextProps.error) {\r\n      this.setState({ error: nextProps.error });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    return (\r\n      <div className='login'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-md-8 m-auto'>\r\n              <h1 className='display-4 text-center'>Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': error.username,\r\n                    })}\r\n                    placeholder='Email Address'\r\n                    name='username'\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {error.username && (\r\n                    <div className='invalid-feedback'>{error.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='password'\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': error.password,\r\n                    })}\r\n                    placeholder='Password'\r\n                    name='password'\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {error.password && (\r\n                    <div className='invalid-feedback'>{error.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type='submit' className='btn btn-info btn-block mt-4' />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  error: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to='/login' />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Layout/Header';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AddProject from './components/Project/AddProject';\nimport { Provider } from 'react-redux';\nimport store from './sotre';\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/register';\nimport Login from './components/UserManagement/login';\nimport jwt_decode from 'jwt-decode';\nimport setJWTToken from './securityUtils/setJWTTOKEN';\nimport { SET_CURRENT_USER } from './actions/types';\nimport { logout } from './actions/securityActions';\nimport SecuredRoute from './securityUtils/secureRoute';\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = '/';\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className='App'>\n          <Header></Header>\n          <Route exact path='/' component={Landing} />\n          <Route exact path='/register' component={Register} />\n          <Route exact path='/login' component={Login} />\n          <Switch>\n            <SecuredRoute exact path='/dashboard' component={Dashboard} />\n            <SecuredRoute exact path='/addProject' component={AddProject} />\n            <SecuredRoute\n              exact\n              path='/updateProject/:id'\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path='/projectBoard/:id'\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path='/addProjectTask/:id'\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path='/updateProjectTask/:backlog_id/:pt_id'\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}